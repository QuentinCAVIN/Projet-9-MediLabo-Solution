spring.application.name=patient-service
server.port=9001

#Les deux urls suivantes permettent de se connecter au docker mysql-db: ports: - 3307:3306

#en local, on accède au port 3307 qui va nous rediriger vers le port 3306 du docker mysql
spring.datasource.url=jdbc:mysql://localhost:3306/patient_service

#de docker à docker, on va utiliser directement le nom du service + le port ou se trouve mysql dans le docker
#Les conteneurs créés ensemble partagent un réseau commun, permettant l'utilisation du nom du service pour la résolution
#spring.datasource.url=jdbc:mysql://mysql-db:3306/patient_service

spring.jpa.generate-ddl=true

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# TODO ci dessus finalement inutile, a supprimer, les message d'erreur qui demande l'ajout du dialect surviennent quand j'essaie de me connecter au mauvais port

spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

spring.jpa.show-sql=true

logging.level.org.springframework.security=DEBUG


#à ajouter en variable d'environnement pour définir les identifiants d'authentification
#security.in.memory.username=
#security.in.memory.password=
#idem pour la connexion a la bdd
#spring.datasource.username=
#spring.datasource.password=
#TODO si je place mes mots de passe de config en variable d'environnement pour éviter de les push sur git, et que finalement je les écris en dur dans mes dockerfile c'est inutile